apply plugin: 'com.android.application'

android {
    signingConfigs {
        config_r {
            keyAlias 'defP'
            keyPassword '123456'
            storeFile file('sign/vs/defPlatform.jks')
            storePassword '123456'
        }
        config_star {
            keyAlias 'starsign'
            keyPassword '123456'
            storeFile file('sign/star/starsign.jks')
            storePassword '123456'
        }
        config_vsun {
            keyAlias 'vsunsign'
            keyPassword '123456'
            storeFile file('sign/vsun/vsunsign.jks')
            storePassword '123456'
        }
        config_vsun_V6011A5 {
            keyAlias 'V6011A5'
            keyPassword '123456'
            storeFile file('sign/vs/V6011A5_platform.jks')
            storePassword '123456'
        }
    }

    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        multiDexEnabled true
        applicationId "com.vsun.controlcenter"
        minSdkVersion 24
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        jackOptions {
            enabled true
        }
        dexOptions {
            javaMaxHeapSize "6g"
        }
    }

    buildTypes {
        release {
            minifyEnabled false // true -> enable proguard
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            proguardFile 'proguard-rules.pro'
            signingConfig signingConfigs.config_vsun
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            zipAlignEnabled true
        }
        //release {
        //        minifyEnabled false
        //        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        //    }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    aaptOptions {
        additionalParameters "--no-version-vectors"
    }

    android.applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                //def fileName = outputFile.name.replace("app","${defaultConfig.applicationId }_${defaultConfig.versionName}_${releaseTime() }")
                def fileName = outputFile.name.replace("app","ControlCenter_${defaultConfig.versionName}")
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.githang:status-bar-compat:0.6'
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:support-v4:26.0.0-alpha1'
    compile 'com.henryblue.minimusicview:library:1.0.1'
    provided files('libs/framework.jar')
}

def releaseTime() {
    return new Date().getTime()
}
